name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo root
        run: |
          pwd
          ls -la

      - name: Locate package.json
        run: |
          if [ -f package.json ]; then
            echo "PKG_DIR=." >> $GITHUB_ENV
          elif [ -f frontend/package.json ]; then
            echo "PKG_DIR=frontend" >> $GITHUB_ENV
          elif [ -f app/package.json ]; then
            echo "PKG_DIR=app" >> $GITHUB_ENV
          elif [ -f web/package.json ]; then
            echo "PKG_DIR=web" >> $GITHUB_ENV
          else
            echo "package.json not found in repo root or common subfolders." >&2
            echo "Tree snapshot:"
            ls -la
            exit 1
          fi
          echo "Using PKG_DIR=$(cat $GITHUB_ENV | grep PKG_DIR | tail -n1 | cut -d'=' -f2)"

      - name: Use Node.js 20 (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ env.PKG_DIR }}/package-lock.json

      - name: Show versions
        run: |
          node -v
          npm -v

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install deps (ci with fallback)
        working-directory: ${{ env.PKG_DIR }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: true

      - name: Lint (if present)
        working-directory: ${{ env.PKG_DIR }}
        run: npm run lint --if-present

      - name: Build (verbose, tolerant)
        working-directory: ${{ env.PKG_DIR }}
        env:
          CI: "false"                      # don't fail on warnings
          DISABLE_ESLINT_PLUGIN: "true"    # skip CRA eslint plugin
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          echo "Building in $PWD ..."
          npm run build --loglevel verbose
